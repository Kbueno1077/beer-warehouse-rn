// Generated by Xata Codegen 0.29.4. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
    BaseClientOptions,
    SchemaInference,
    XataRecord,
} from "@xata.io/client";

const tables = [
    {
        name: "beers",
        columns: [
            {
                name: "alcohol_percentage",
                type: "float",
                notNull: true,
                defaultValue: "0.0",
            },
            { name: "ml", type: "float", notNull: true, defaultValue: "330" },
            { name: "initial_impression", type: "string" },
            { name: "bought_in", type: "string" },
            { name: "evidence_img", type: "string" },
            { name: "additional_comments", type: "text" },
            {
                name: "country",
                type: "string",
                notNull: true,
                defaultValue: "TBD",
            },
            { name: "name", type: "string", unique: true },
        ],
    },
    {
        name: "nextauth_users",
        columns: [
            { name: "email", type: "email" },
            { name: "emailVerified", type: "datetime" },
            { name: "name", type: "string" },
            { name: "image", type: "string" },
            { name: "password", type: "string" },
            { name: "role", type: "string", defaultValue: "User" },
        ],
        revLinks: [
            { column: "user", table: "nextauth_accounts" },
            { column: "user", table: "nextauth_users_accounts" },
            { column: "user", table: "nextauth_users_sessions" },
            { column: "user", table: "nextauth_sessions" },
        ],
    },
    {
        name: "nextauth_accounts",
        columns: [
            { name: "user", type: "link", link: { table: "nextauth_users" } },
            { name: "type", type: "string" },
            { name: "provider", type: "string" },
            { name: "providerAccountId", type: "string" },
            { name: "refresh_token", type: "string" },
            { name: "access_token", type: "string" },
            { name: "expires_at", type: "int" },
            { name: "token_type", type: "string" },
            { name: "scope", type: "string" },
            { name: "id_token", type: "text" },
            { name: "session_state", type: "string" },
        ],
        revLinks: [{ column: "account", table: "nextauth_users_accounts" }],
    },
    {
        name: "nextauth_verificationTokens",
        columns: [
            { name: "identifier", type: "string" },
            { name: "token", type: "string" },
            { name: "expires", type: "datetime" },
        ],
    },
    {
        name: "nextauth_users_accounts",
        columns: [
            { name: "user", type: "link", link: { table: "nextauth_users" } },
            {
                name: "account",
                type: "link",
                link: { table: "nextauth_accounts" },
            },
        ],
    },
    {
        name: "nextauth_users_sessions",
        columns: [
            { name: "user", type: "link", link: { table: "nextauth_users" } },
            {
                name: "session",
                type: "link",
                link: { table: "nextauth_sessions" },
            },
        ],
    },
    {
        name: "nextauth_sessions",
        columns: [
            { name: "sessionToken", type: "string" },
            { name: "expires", type: "datetime" },
            { name: "user", type: "link", link: { table: "nextauth_users" } },
        ],
        revLinks: [{ column: "session", table: "nextauth_users_sessions" }],
    },
    {
        name: "friends-beer",
        columns: [
            { name: "name", type: "string" },
            { name: "evidence_img", type: "string" },
            { name: "friend", type: "string" },
            { name: "promoted", type: "bool", defaultValue: "false" },
        ],
    },
    {
        name: "usersBeers",
        columns: [
            {
                name: "owner",
                type: "string",
                notNull: true,
                defaultValue: "N/A",
            },
            { name: "name", type: "string" },
            { name: "evidence_img", type: "string" },
            { name: "bought_in", type: "string" },
            {
                name: "country",
                type: "string",
                notNull: true,
                defaultValue: "TBD",
            },
            { name: "ml", type: "float", notNull: true, defaultValue: "330" },
            { name: "additional_comments", type: "text" },
            {
                name: "alcohol_percentage",
                type: "float",
                notNull: true,
                defaultValue: "0.0",
            },
            { name: "initial_impression", type: "string" },
        ],
    },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Beers = InferredTypes["beers"];
export type BeersRecord = Beers & XataRecord;

export type NextauthUsers = InferredTypes["nextauth_users"];
export type NextauthUsersRecord = NextauthUsers & XataRecord;

export type NextauthAccounts = InferredTypes["nextauth_accounts"];
export type NextauthAccountsRecord = NextauthAccounts & XataRecord;

export type NextauthVerificationTokens =
    InferredTypes["nextauth_verificationTokens"];
export type NextauthVerificationTokensRecord = NextauthVerificationTokens &
    XataRecord;

export type NextauthUsersAccounts = InferredTypes["nextauth_users_accounts"];
export type NextauthUsersAccountsRecord = NextauthUsersAccounts & XataRecord;

export type NextauthUsersSessions = InferredTypes["nextauth_users_sessions"];
export type NextauthUsersSessionsRecord = NextauthUsersSessions & XataRecord;

export type NextauthSessions = InferredTypes["nextauth_sessions"];
export type NextauthSessionsRecord = NextauthSessions & XataRecord;

export type FriendsBeer = InferredTypes["friends-beer"];
export type FriendsBeerRecord = FriendsBeer & XataRecord;

export type UsersBeers = InferredTypes["usersBeers"];
export type UsersBeersRecord = UsersBeers & XataRecord;

export type DatabaseSchema = {
    beers: BeersRecord;
    nextauth_users: NextauthUsersRecord;
    nextauth_accounts: NextauthAccountsRecord;
    nextauth_verificationTokens: NextauthVerificationTokensRecord;
    nextauth_users_accounts: NextauthUsersAccountsRecord;
    nextauth_users_sessions: NextauthUsersSessionsRecord;
    nextauth_sessions: NextauthSessionsRecord;
    "friends-beer": FriendsBeerRecord;
    usersBeers: UsersBeersRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
    databaseURL:
        "https://Kevin-Bueno-s-workspace-8l3c94.us-east-1.xata.sh/db/beer-warehouse",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
    constructor(options?: BaseClientOptions) {
        super(
            {
                ...defaultOptions,
                ...options,
                enableBrowser: true,
                apiKey: "xau_XocxK1M6lv7R9BUWoGUjAm9gcxro3r930",
                branch: "main",
            },
            tables
        );
    }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
    if (instance) return instance;

    instance = new XataClient();
    return instance;
};
